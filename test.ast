└── ProgramNode
    ├── VariableDeclarationNode (pi)
    │   ├── TypeNode (const float)
    │   └── LiteralNode (3.14159)
    ├── VariableDeclarationNode (score)
    │   ├── TypeNode (uint)
    │   └── LiteralNode (100)
    ├── VariableDeclarationNode (negative)
    │   ├── TypeNode (int)
    │   └── UnaryExpressionNode (-)
    │       └── LiteralNode (42)
    ├── FunctionDeclarationNode (Add)
    │   ├── Param: a
    │   │   └── TypeNode (int)
    │   └── Param: b
    │       └── TypeNode (int)
    │   ├── TypeNode (int)
    │   └── BlockNode
    │       ├── VariableDeclarationNode (sum)
    │       │   ├── TypeNode (int)
    │       │   └── BinaryExpressionNode (+)
    │       │       ├── IdentifierNode (a)
    │       │       └── IdentifierNode (b)
    │       └── ReturnStatementNode
    │           └── IdentifierNode (sum)
    ├── FunctionDeclarationNode (Greet)
    │   └── Param: name
    │       └── TypeNode (string)
    │   ├── TypeNode (string)
    │   └── BlockNode
    │       ├── VariableDeclarationNode (message)
    │       │   ├── TypeNode (string)
    │       │   └── BinaryExpressionNode (+)
    │       │       ├── BinaryExpressionNode (+)
    │       │       │   ├── LiteralNode (Hello, )
    │       │       │   └── IdentifierNode (name)
    │       │       └── LiteralNode (!)
    │       └── ReturnStatementNode
    │           └── IdentifierNode (message)
    ├── ClassDeclarationNode (Person)
    │   └── ClassBlockNode
    │       ├── VariableDeclarationNode (name)
    │       │   ├── TypeNode (string)
    │       │   └── LiteralNode ()
    │       ├── VariableDeclarationNode (age)
    │       │   ├── TypeNode (int)
    │       │   └── LiteralNode (0)
    │       ├── FunctionDeclarationNode (Person)
    │       │   ├── Param: newName
    │       │   │   └── TypeNode (string)
    │       │   └── Param: newAge
    │       │       └── TypeNode (int)
    │       │   └── BlockNode
    │       │       ├── ExpressionStatementNode
    │       │       │   └── BinaryExpressionNode (=)
    │       │       │       ├── IdentifierNode (name)
    │       │       │       └── IdentifierNode (newName)
    │       │       └── ExpressionStatementNode
    │       │           └── BinaryExpressionNode (=)
    │       │               ├── IdentifierNode (age)
    │       │               └── IdentifierNode (newAge)
    │       └── FunctionDeclarationNode (Describe)
    │           ├── TypeNode (string)
    │           └── BlockNode
    │               └── ReturnStatementNode
    │                   └── BinaryExpressionNode (+)
    │                       ├── BinaryExpressionNode (+)
    │                       │   ├── BinaryExpressionNode (+)
    │                       │   │   ├── IdentifierNode (name)
    │                       │   │   └── LiteralNode ( is )
    │                       │   └── IdentifierNode (age)
    │                       └── LiteralNode ( years old.)
    ├── EnumDeclarationNode (Direction)
    │   ├── EnumValue: North
    │   ├── EnumValue: East
    │   ├── EnumValue: South
    │   ├── EnumValue: West
    ├── FunctionDeclarationNode (TestLoops)
    │   └── BlockNode
    │       ├── ForStatementNode
    │       │   ├── VariableDeclarationNode (i)
    │       │   │   ├── TypeNode (uint)
    │       │   │   └── LiteralNode (0)
    │       │   ├── BinaryExpressionNode (<)
    │       │   │   ├── IdentifierNode (i)
    │       │   │   └── LiteralNode (10)
    │       │   ├── BinaryExpressionNode (=)
    │       │   │   ├── IdentifierNode (i)
    │       │   │   └── BinaryExpressionNode (+)
    │       │   │       ├── IdentifierNode (i)
    │       │   │       └── LiteralNode (1)
    │       │   └── BlockNode
    │       │       ├── IfStatementNode
    │       │       │   ├── BinaryExpressionNode (==)
    │       │       │   │   ├── IdentifierNode (i)
    │       │       │   │   └── LiteralNode (3)
    │       │       │   └── BlockNode
    │       │       │       └── ContinueStatementNode
    │       │       └── IfStatementNode
    │       │           ├── BinaryExpressionNode (==)
    │       │           │   ├── IdentifierNode (i)
    │       │           │   └── LiteralNode (7)
    │       │           └── BlockNode
    │       │               └── BreakStatementNode
    │       ├── VariableDeclarationNode (count)
    │       │   ├── TypeNode (uint)
    │       │   └── LiteralNode (5)
    │       └── WhileStatementNode
    │           ├── BinaryExpressionNode (>)
    │           │   ├── IdentifierNode (count)
    │           │   └── LiteralNode (0)
    │           └── BlockNode
    │               └── ExpressionStatementNode
    │                   └── BinaryExpressionNode (=)
    │                       ├── IdentifierNode (count)
    │                       └── BinaryExpressionNode (-)
    │                           ├── IdentifierNode (count)
    │                           └── LiteralNode (1)
    ├── VariableDeclarationNode (numbers)
    │   ├── TypeNode ([int])
    │   └── ArrayLiteralNode
    │       ├── LiteralNode (1)
    │       ├── LiteralNode (2)
    │       ├── LiteralNode (3)
    │       ├── LiteralNode (4)
    │       └── LiteralNode (5)
    ├── VariableDeclarationNode (emptyArr)
    │   ├── TypeNode ([float])
    │   └── ArrayLiteralNode
    ├── FunctionDeclarationNode (TestExpressions)
    │   └── BlockNode
    │       ├── VariableDeclarationNode (a)
    │       │   ├── TypeNode (int)
    │       │   └── LiteralNode (10)
    │       ├── VariableDeclarationNode (b)
    │       │   ├── TypeNode (int)
    │       │   └── LiteralNode (20)
    │       ├── VariableDeclarationNode (result)
    │       │   ├── TypeNode (bool)
    │       │   └── BinaryExpressionNode (||)
    │       │       ├── BinaryExpressionNode (==)
    │       │       │   ├── IdentifierNode (a)
    │       │       │   └── IdentifierNode (b)
    │       │       └── BinaryExpressionNode (&&)
    │       │           ├── BinaryExpressionNode (!=)
    │       │           │   ├── IdentifierNode (a)
    │       │           │   └── IdentifierNode (b)
    │       │           └── BinaryExpressionNode (<)
    │       │               ├── IdentifierNode (a)
    │       │               └── IdentifierNode (b)
    │       └── VariableDeclarationNode (calc)
    │           ├── TypeNode (float)
    │           └── BinaryExpressionNode (-)
    │               ├── BinaryExpressionNode (+)
    │               │   ├── BinaryExpressionNode (*)
    │               │   │   ├── UnaryExpressionNode (-)
    │               │   │   │   └── IdentifierNode (a)
    │               │   │   └── LiteralNode (2.5)
    │               │   └── BinaryExpressionNode (/)
    │               │       ├── IdentifierNode (b)
    │               │       └── LiteralNode (5)
    │               └── LiteralNode (3.0)
    ├── FunctionDeclarationNode (TestSwitch)
    │   └── Param: dir
    │       └── TypeNode (Direction)
    │   └── BlockNode
    │       └── SwitchStatementNode
    │           ├── Case:
    │           │   ├── MemberAccessNode (.North)
    │           │   │   └── IdentifierNode (Direction)
    │           │   └── BlockNode
    │           │       └── ExpressionStatementNode
    │           │           └── FunctionCallNode (TestExpressions)
    │           ├── Case:
    │           │   ├── MemberAccessNode (.East)
    │           │   │   └── IdentifierNode (Direction)
    │           │   └── BlockNode
    │           ├── Case:
    │           │   ├── MemberAccessNode (.South)
    │           │   │   └── IdentifierNode (Direction)
    │           │   └── BlockNode
    │           │       └── BreakStatementNode
    │           ├── Case:
    │           │   ├── MemberAccessNode (.West)
    │           │   │   └── IdentifierNode (Direction)
    │           │   └── BlockNode
    │           │       └── ExpressionStatementNode
    │           │           └── FunctionCallNode (TestExpressions)
    │           └── Default:
    │           │   └── BlockNode
    │           └── IdentifierNode (dir)
    ├── FunctionDeclarationNode (TestConstParameters)
    │   ├── Param: name
    │   │   └── TypeNode (const string)
    │   └── Param: age
    │       └── TypeNode (const uint)
    │   └── BlockNode
    │       ├── ExpressionStatementNode
    │       │   └── BinaryExpressionNode (=)
    │       │       ├── Unknown ASTNode
    │       │       └── LiteralNode (10)
    │       ├── ExpressionStatementNode
    │       │   └── FunctionCallNode ()
    │       │       └── MemberAccessNode (.call)
    │       │           └── IdentifierNode (test)
    │       └── ExpressionStatementNode
    │           └── FunctionCallNode ()
    │               └── MemberAccessNode (.a)
    │                   └── Unknown ASTNode
    └── FunctionDeclarationNode (Main)
        └── BlockNode
            ├── VariableDeclarationNode (p)
            │   ├── TypeNode (Person)
            │   └── FunctionCallNode (Person)
            │       ├── LiteralNode (Alice)
            │       └── LiteralNode (30)
            ├── VariableDeclarationNode (greeting)
            │   ├── TypeNode (string)
            │   └── FunctionCallNode (Greet)
            │       └── LiteralNode (Bob)
            ├── ExpressionStatementNode
            │   └── FunctionCallNode (Print)
            │       └── IdentifierNode (greeting)
            └── ExpressionStatementNode
                └── FunctionCallNode (Print)
                    └── FunctionCallNode ()
                        └── MemberAccessNode (.Describe)
                            └── IdentifierNode (p)
